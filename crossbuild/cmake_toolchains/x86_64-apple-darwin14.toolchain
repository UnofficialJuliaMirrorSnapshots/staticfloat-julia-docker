# Toolchain file for x86_64-apple-darwin14
set(CMAKE_SYSTEM_NAME Darwin)
set(CMAKE_SYSTEM_PROCESSOR x86_64)
set(CMAKE_SYSTEM_VERSION 14.5)

# Extract out DARWIN_MAJOR_VERSION and DARWIN_MINOR_VERSION
string(REGEX REPLACE "^([0-9]+)\\.([0-9]+).*$" "\\1" DARWIN_MAJOR_VERSION "${CMAKE_SYSTEM_VERSION}")
string(REGEX REPLACE "^([0-9]+)\\.([0-9]+).*$" "\\2" DARWIN_MINOR_VERSION "${CMAKE_SYSTEM_VERSION}")

# Enable rpath support for 10.5 and greater where it is known to work.
if("${DARWIN_MAJOR_VERSION}" GREATER 8)
    set(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG "-Wl,-rpath,")
endif()

set(CMAKE_SYSROOT /opt/x86_64-apple-darwin14/MacOSX10.10.sdk/)
set(CMAKE_SYSTEM_FRAMEWORK_PATH
    ${CMAKE_SYSROOT}/System/Library/Frameworks
    ${CMAKE_SYSROOT}/System/Library/PrivateFrameworks
)
set(CMAKE_INSTALL_PREFIX /workspace/destdir/)

set(CMAKE_C_COMPILER /opt/x86_64-apple-darwin14/bin/clang)
set(CMAKE_CXX_COMPILER /opt/x86_64-apple-darwin14/bin/clang++)

# These settings don't seem to function properly, they stop cmake from being
# able to find anything within the workspace at all.
#set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
#set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
#set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
#set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
if( $ENV{CC} MATCHES ccache )
    set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ccache)
endif()

